{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from \"unistore\";\nimport axios from \"axios\";\nimport { playlistBerawan, playlistCerah, playlistHujan, Bearer } from \"./Data.js\";\nimport _ from 'lodash';\nvar initialState = {\n  is_login: false,\n  token: \"\",\n  username: \"\",\n  password: \"\",\n  userStatus: \"\",\n  email: \"\",\n  contact: \"\",\n  address: \"\",\n  avatar: \"\",\n  deskripsiPenjual: \"\",\n  shopName: \"\",\n  fullName: \"\",\n  listRetro: [],\n  fotoProduk: \"\",\n  itemDetail: \"\"\n};\nvar baseUrl = 'http://localhost:8010/proxy';\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, event) {\n      return _defineProperty({}, event.target.name, event.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false,\n        token: \"\"\n      };\n    },\n    postLoginPembeli: function () {\n      var _postLoginPembeli = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var data, reqToken;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                reqToken = {\n                  method: 'post',\n                  url: baseUrl + '/login/pembeli',\n                  data: data,\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                };\n                _context2.next = 4;\n                return axios(reqToken).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(response) {\n                    var reqGet;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (response.status == 200) {\n                              // console.log('INITOKEN', response.data.token)\n                              store.setState({\n                                is_login: true,\n                                token: response.data.token,\n                                userStatus: response.data.statusUser\n                              });\n                            }\n\n                            reqGet = {\n                              method: 'get',\n                              url: baseUrl + '/pembeli',\n                              headers: {\n                                Authorization: \"Bearer \" + store.getState().token\n                              }\n                            };\n                            _context.next = 4;\n                            return axios(reqGet).then(function (response) {\n                              if (response.status == 200) {\n                                store.setState({\n                                  fullName: response.data.buyer.fullName,\n                                  contact: response.data.buyer.contact,\n                                  email: response.data.buyer.email,\n                                  address: response.data.buyer.address\n                                });\n                              }\n                            }).catch(function (error) {\n                              console.log(error);\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function postLoginPembeli(_x) {\n        return _postLoginPembeli.apply(this, arguments);\n      }\n\n      return postLoginPembeli;\n    }(),\n    postLoginPenjual: function () {\n      var _postLoginPenjual = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(state) {\n        var data, reqToken;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                reqToken = {\n                  method: 'post',\n                  url: baseUrl + '/login/penjual',\n                  data: data,\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                };\n                _context4.next = 4;\n                return axios(reqToken).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(response) {\n                    var reqGet;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            if (response.status == 200) {\n                              // console.log('INITOKEN', response.data.token)\n                              store.setState({\n                                is_login: true,\n                                token: response.data.token,\n                                userStatus: response.data.statusUser\n                              });\n                            }\n\n                            reqGet = {\n                              method: 'get',\n                              url: baseUrl + '/penjual',\n                              headers: {\n                                Authorization: \"Bearer \" + store.getState().token\n                              }\n                            };\n                            _context3.next = 4;\n                            return axios(reqGet).then(function (response) {\n                              if (response.status == 200) {\n                                store.setState({\n                                  shopName: response.data.buyer.fullName,\n                                  contact: response.data.buyer.contact,\n                                  email: response.data.buyer.email,\n                                  address: response.data.buyer.address,\n                                  avatar: response.data.foto_profil,\n                                  deskripsiPenjual: response.data.deskripsi_penjual\n                                });\n                              }\n                            }).catch(function (error) {\n                              console.log(error);\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x4) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }()).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function postLoginPenjual(_x3) {\n        return _postLoginPenjual.apply(this, arguments);\n      }\n\n      return postLoginPenjual;\n    }(),\n    GetPublic: function () {\n      var _GetPublic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(state) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.get(baseUrl + '/public').then(function (response) {\n                  store.setState({\n                    listRetro: response.data.products\n                  });\n                  console.log(\"thiiis\", response.data);\n                  console.log(this.state.listRetro);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function GetPublic(_x5) {\n        return _GetPublic.apply(this, arguments);\n      }\n\n      return GetPublic;\n    }(),\n    getId: function () {\n      var _getId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(state, keyword) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return axios.get(baseUrl + '/public/' + keyword).then(function (response) {\n                  console.log(\"RSP\", response.data);\n                  store.setState({\n                    itemDetail: response.data.product\n                  });\n                  console.log(\"COK\", response.data.product);\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getId(_x6, _x7) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }(),\n    postPenjualBaru: function () {\n      var _postPenjualBaru = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password,\n                  shopName: state.shopName,\n                  email: state.email,\n                  contact: state.contact,\n                  address: state.address\n                };\n                _context7.next = 3;\n                return axios.post(baseUrl + '/penjual', data).then(function (response) {\n                  if (response.status == 200) {\n                    store.setState({\n                      username: state.username,\n                      shopName: state.shopName,\n                      email: state.email,\n                      contact: state.contact,\n                      address: state.address,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function postPenjualBaru(_x8) {\n        return _postPenjualBaru.apply(this, arguments);\n      }\n\n      return postPenjualBaru;\n    }(),\n    postPembeliBaru: function () {\n      var _postPembeliBaru = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password,\n                  fullName: state.fullName,\n                  email: state.email,\n                  contact: state.contact,\n                  address: state.address\n                };\n                _context8.next = 3;\n                return axios.post(baseUrl + '/pembeli', data).then(function (response) {\n                  if (response.status == 200) {\n                    console.log(\"Register\", response.data.input);\n                    store.setState({\n                      username: state.username,\n                      fullName: state.fullName,\n                      email: state.email,\n                      contact: state.contact,\n                      address: state.address,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function postPembeliBaru(_x9) {\n        return _postPembeliBaru.apply(this, arguments);\n      }\n\n      return postPembeliBaru;\n    }(),\n    postProduk: function () {\n      var _postProduk = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password,\n                  fullName: state.fullName,\n                  email: state.email,\n                  contact: state.contact,\n                  address: state.address\n                };\n                _context9.next = 3;\n                return axios.post(baseUrl + '/pembeli', data).then(function (response) {\n                  if (response.status == 200) {\n                    console.log(\"Register\", response.data.input);\n                    store.setState({\n                      username: state.username,\n                      fullName: state.fullName,\n                      email: state.email,\n                      contact: state.contact,\n                      address: state.address,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function postProduk(_x10) {\n        return _postProduk.apply(this, arguments);\n      }\n\n      return postProduk;\n    }() // searchNews: async (state, keyword) => {\n    //     if (keyword.length > 2) {\n    //         try {\n    //             {\n    //                 store.getState().listSong.map((item, key) => {\n    //                     var counter = 0;\n    //                     if (_.includes(item.track.name.toLowerCase(), keyword.toLowerCase())) {\n    //                         store.getState().dataSearch.push(item)\n    //                     }\n    //                 })\n    //             }\n    //             store.setState({ listSong: store.getState().dataSearch });\n    //         }\n    //         catch (error) {\n    //             console.log(error);\n    //         }\n    //     }\n    //     if (keyword.length <= 2) {\n    //         try {\n    //             const response = await axios.get(\n    //                 \"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                 {\n    //                     headers: {\n    //                         \"Authorization\": \"Bearer \" + Bearer,\n    //                     }\n    //                 })\n    //             // console.log(store.getState().listSong);\n    //             store.setState({ listSong: response.data.tracks.items });\n    //             store.getState().dataSearch = []\n    //         }\n    //         catch (error) {\n    //             console.log(error);\n    //         }\n    //     }\n    // },\n\n  };\n}; // GetCuaca: async (state) => {\n//     if (store.getState().MoodCityStat == 1) {\n//         await axios\n//             .get(\"http://api.openweathermap.org/data/2.5/weather?q=\" + store.getState().cities + \"&appid=02436e399d179c2eb2871ed7d4169798\")\n//             .then(function (response) {\n//                 store.setState({ Cuaca: response.data.weather['0'].id });\n//                 //dipakai juga untuk Focus, Chill, Accoustic, Classic\n//                 if (store.getState().Cuaca > 800) {\n//                     const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Berawan\" });\n//                 } else if (store.getState().Cuaca >= 700 && store.getState().Cuaca <= 800) {\n//                     const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Cerah\" });\n//                 } else {\n//                     const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Hujan\" });\n//                 }\n//                 axios\n//                     .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n//                         {\n//                             headers: {\n//                                 \"Authorization\": \"Bearer \" + Bearer,\n//                             }\n//                         })\n//                     .then(function (response) {\n//                         store.setState({ listSong: response.data.tracks.items });\n//                     })\n//                     .catch(function (error) {\n//                         console.log(error);\n//                     });\n//             })\n//             .catch(function (error) {\n//                 console.log(error);\n//             });\n//     }\n//     else if (store.getState().MoodCityStat == 2) {\n//         if (store.getState().moods == \"Galau\" || store.getState().moods == \"Nostalgia\") {\n//             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Sedih\") {\n//             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Senang\" || store.getState().moods == \"Semangat\" || store.getState().moods == \"Party\") {\n//             const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Fokus\" || store.getState().moods == \"Love\") {\n//             const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         await axios\n//             .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n//                 {\n//                     headers: {\n//                         \"Authorization\": \"Bearer \" + Bearer,\n//                     }\n//                 })\n//             .then(function (response) {\n//                 store.setState({ listSong: response.data.tracks.items });\n//             })\n//             .catch(function (error) {\n//                 console.log(error);\n//             });\n//     }\n// },","map":{"version":3,"sources":["/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/src/store.js"],"names":["createStore","axios","playlistBerawan","playlistCerah","playlistHujan","Bearer","_","initialState","is_login","token","username","password","userStatus","email","contact","address","avatar","deskripsiPenjual","shopName","fullName","listRetro","fotoProduk","itemDetail","baseUrl","store","actions","setField","state","event","target","name","value","postLogout","postLoginPembeli","data","reqToken","method","url","headers","then","response","status","setState","statusUser","reqGet","Authorization","getState","buyer","catch","error","console","log","postLoginPenjual","foto_profil","deskripsi_penjual","GetPublic","get","products","getId","keyword","product","postPenjualBaru","post","postPembeliBaru","input","postProduk"],"mappings":"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AAE4B,QAAQ,CAACN,IAAT,CAAcS;AANf,qBAAf;AAQH;AACJ,iBAdC,EAeDK,KAfC,CAeK,UAAUC,KAAV,EAAiB;AACpBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,iBAjBC,CATE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA1LmB,CAsN7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzP6B,GAAL;AAAA,CAArB,C,CA2PH;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\nimport { playlistBerawan, playlistCerah, playlistHujan, Bearer } from \"./Data.js\"\nimport _ from 'lodash';\n\n\nconst initialState = {\n    is_login: false,\n    token: \"\",\n    username: \"\",\n    password: \"\",\n    userStatus: \"\",\n    email: \"\",\n    contact: \"\",\n    address: \"\",\n    avatar: \"\",\n    deskripsiPenjual: \"\",\n\n    shopName: \"\",\n    fullName: \"\",\n\n    listRetro: [],\n    fotoProduk: \"\",\n\n    itemDetail: \"\",\n\n}\n\nvar baseUrl = 'http://localhost:8010/proxy'\n\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n    setField: (state, event) => {\n        return { [event.target.name]: event.target.value };\n    },\n\n    postLogout: state => {\n        return {\n            is_login: false,\n            token: \"\"\n        };\n    },\n\n    postLoginPembeli: async (state) => {\n        const data = {\n            username: state.username,\n            password: state.password,\n        };\n        const reqToken = {\n            method: 'post',\n            url: baseUrl + '/login/pembeli',\n            data: data,\n            headers: { \"Content-Type\": \"application/json\" }\n        }\n        await axios(reqToken)\n            .then(async (response) => {\n                if (response.status == 200) {\n                    // console.log('INITOKEN', response.data.token)\n                    store.setState({\n                        is_login: true,\n                        token: response.data.token,\n                        userStatus: response.data.statusUser\n                    });\n                }\n                const reqGet = {\n                    method: 'get',\n                    url: baseUrl + '/pembeli',\n                    headers: { Authorization: \"Bearer \" + store.getState().token }\n                }\n                await axios(reqGet)\n                    .then(function (response) {\n                        if (response.status == 200) {\n                            store.setState({\n                                fullName: response.data.buyer.fullName,\n                                contact: response.data.buyer.contact,\n                                email: response.data.buyer.email,\n                                address: response.data.buyer.address,\n                            })\n                        }\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    })\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n\n    postLoginPenjual: async (state) => {\n        const data = {\n            username: state.username,\n            password: state.password,\n        };\n        const reqToken = {\n            method: 'post',\n            url: baseUrl + '/login/penjual',\n            data: data,\n            headers: { \"Content-Type\": \"application/json\" }\n        }\n        await axios(reqToken)\n            .then(async (response) => {\n                if (response.status == 200) {\n                    // console.log('INITOKEN', response.data.token)\n                    store.setState({\n                        is_login: true,\n                        token: response.data.token,\n                        userStatus: response.data.statusUser\n                    });\n                }\n                const reqGet = {\n                    method: 'get',\n                    url: baseUrl + '/penjual',\n                    headers: { Authorization: \"Bearer \" + store.getState().token }\n                }\n                await axios(reqGet)\n                    .then(function (response) {\n                        if (response.status == 200) {\n                            store.setState({\n                                shopName: response.data.buyer.fullName,\n                                contact: response.data.buyer.contact,\n                                email: response.data.buyer.email,\n                                address: response.data.buyer.address,\n                                avatar: response.data.foto_profil,\n                                deskripsiPenjual: response.data.deskripsi_penjual\n                            })\n                        }\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    })\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n\n    GetPublic: async (state) => {\n        await axios\n            .get(baseUrl + '/public')\n            .then(function (response) {\n                store.setState({ listRetro: response.data.products })\n                console.log(\"thiiis\", response.data);\n                console.log(this.state.listRetro);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n\n    getId: async (state, keyword) => {\n        await axios\n            .get(baseUrl + '/public/' + keyword)\n            .then(function (response) {\n                console.log(\"RSP\", response.data)\n                store.setState({ itemDetail: response.data.product })\n                console.log(\"COK\", response.data.product)\n            })\n    },\n\n    postPenjualBaru: async state => {\n        const data = {\n            username: state.username,\n            password: state.password,\n            shopName: state.shopName,\n            email: state.email,\n            contact: state.contact,\n            address: state.address,\n        };\n        await axios\n            .post(baseUrl + '/penjual', data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    store.setState({\n                        username: state.username,\n                        shopName: state.shopName,\n                        email: state.email,\n                        contact: state.contact,\n                        address: state.address,\n                        userStatus: response.data.statusUser,\n                    })\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n\n    postPembeliBaru: async state => {\n        const data = {\n            username: state.username,\n            password: state.password,\n            fullName: state.fullName,\n            email: state.email,\n            contact: state.contact,\n            address: state.address,\n        };\n        await axios\n            .post(baseUrl + '/pembeli', data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    console.log(\"Register\", response.data.input)\n                    store.setState({\n                        username: state.username,\n                        fullName: state.fullName,\n                        email: state.email,\n                        contact: state.contact,\n                        address: state.address,\n                        userStatus: response.data.statusUser,\n                    })\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n\n    postProduk: async state => {\n        const data = {\n            username: state.username,\n            password: state.password,\n            fullName: state.fullName,\n            email: state.email,\n            contact: state.contact,\n            address: state.address,\n        };\n        await axios\n            .post(baseUrl + '/pembeli', data)\n            .then(function (response) {\n                if (response.status == 200) {\n                    console.log(\"Register\", response.data.input)\n                    store.setState({\n                        username: state.username,\n                        fullName: state.fullName,\n                        email: state.email,\n                        contact: state.contact,\n                        address: state.address,\n                        userStatus: response.data.statusUser,\n                    })\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n    // searchNews: async (state, keyword) => {\n    //     if (keyword.length > 2) {\n    //         try {\n    //             {\n    //                 store.getState().listSong.map((item, key) => {\n    //                     var counter = 0;\n    //                     if (_.includes(item.track.name.toLowerCase(), keyword.toLowerCase())) {\n    //                         store.getState().dataSearch.push(item)\n    //                     }\n    //                 })\n    //             }\n\n    //             store.setState({ listSong: store.getState().dataSearch });\n    //         }\n    //         catch (error) {\n    //             console.log(error);\n    //         }\n    //     }\n    //     if (keyword.length <= 2) {\n    //         try {\n    //             const response = await axios.get(\n    //                 \"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                 {\n    //                     headers: {\n    //                         \"Authorization\": \"Bearer \" + Bearer,\n    //                     }\n    //                 })\n    //             // console.log(store.getState().listSong);\n    //             store.setState({ listSong: response.data.tracks.items });\n    //             store.getState().dataSearch = []\n    //         }\n    //         catch (error) {\n    //             console.log(error);\n    //         }\n    //     }\n    // },\n})\n    // GetCuaca: async (state) => {\n    //     if (store.getState().MoodCityStat == 1) {\n    //         await axios\n    //             .get(\"http://api.openweathermap.org/data/2.5/weather?q=\" + store.getState().cities + \"&appid=02436e399d179c2eb2871ed7d4169798\")\n    //             .then(function (response) {\n    //                 store.setState({ Cuaca: response.data.weather['0'].id });\n\n    //                 //dipakai juga untuk Focus, Chill, Accoustic, Classic\n    //                 if (store.getState().Cuaca > 800) {\n    //                     const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Berawan\" });\n\n    //                 } else if (store.getState().Cuaca >= 700 && store.getState().Cuaca <= 800) {\n    //                     const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Cerah\" });\n\n    //                 } else {\n    //                     const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Hujan\" });\n\n    //                 }\n    //                 axios\n    //                     .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                         {\n    //                             headers: {\n    //                                 \"Authorization\": \"Bearer \" + Bearer,\n    //                             }\n    //                         })\n    //                     .then(function (response) {\n    //                         store.setState({ listSong: response.data.tracks.items });\n\n    //                     })\n    //                     .catch(function (error) {\n    //                         console.log(error);\n    //                     });\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //             });\n    //     }\n    //     else if (store.getState().MoodCityStat == 2) {\n    //         if (store.getState().moods == \"Galau\" || store.getState().moods == \"Nostalgia\") {\n    //             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Sedih\") {\n    //             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Senang\" || store.getState().moods == \"Semangat\" || store.getState().moods == \"Party\") {\n    //             const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Fokus\" || store.getState().moods == \"Love\") {\n    //             const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n\n    //         await axios\n    //             .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                 {\n    //                     headers: {\n    //                         \"Authorization\": \"Bearer \" + Bearer,\n    //                     }\n    //                 })\n    //             .then(function (response) {\n    //                 store.setState({ listSong: response.data.tracks.items });\n\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //             });\n    //     }\n    // },\n"]},"metadata":{},"sourceType":"module"}