{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from \"unistore\";\nimport axios from \"axios\";\nimport { playlistBerawan, playlistCerah, playlistHujan, Bearer } from \"./Data.js\";\nimport _ from 'lodash';\nvar initialState = {\n  is_login: false,\n  token: \"\",\n  username: \"\",\n  password: \"\",\n  userStatus: \"\",\n  email: \"\",\n  contact: \"\",\n  address: \"\",\n  avaPenjual: \"\",\n  deskripsiPenjual: \"\",\n  shopName: \"\",\n  fullName: \"\",\n  listRetro: [],\n  fotoProduk: \"\",\n  itemDetail: \"\"\n};\nvar baseUrl = 'http://localhost:8010/proxy';\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, event) {\n      return _defineProperty({}, event.target.name, event.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false,\n        token: \"\"\n      };\n    },\n    postLoginPembeli: function () {\n      var _postLoginPembeli = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                _context2.next = 3;\n                return axios.post(baseUrl + '/login/pembeli', data, {\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                }).then(\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(response) {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (response.status == 200) {\n                              // console.log('INITOKEN', response.data.token)\n                              store.setState({\n                                is_login: true,\n                                token: response.data.token,\n                                userStatus: response.data.statusUser\n                              });\n                              console.log('INI JUGA TOKEN', store.getState().token);\n                            }\n\n                            _context.next = 3;\n                            return axios;\n\n                          case 3:\n                            console.log('ini loooh', store.getState().token).get(baseUrl + '/pembeli', {\n                              headers: {\n                                Authorization: \"Bearer \" + store.getState().token\n                              }\n                            }).then(function (response) {\n                              if (response.status == 200) {\n                                console.log('ISI RESPONSE', response.data);\n                                store.setState({\n                                  fullName: response.data.buyer.fullName,\n                                  contact: response.data.buyer.contact,\n                                  email: response.data.buyer.email,\n                                  address: response.data.buyer.address\n                                });\n                                console.log('nama lengkap', state.fullName);\n                                console.log('username', state.username);\n                              }\n                            }).catch(function (error) {\n                              console.log(error);\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }()).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function postLoginPembeli(_x) {\n        return _postLoginPembeli.apply(this, arguments);\n      }\n\n      return postLoginPembeli;\n    }(),\n    postLoginPenjual: function () {\n      var _postLoginPenjual = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                _context3.next = 3;\n                return axios.post(baseUrl + '/login/penjual', data).then(function (response) {\n                  if (response.data.hasOwnProperty('token')) {\n                    store.setState({\n                      is_login: true,\n                      token: response.data.token,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function postLoginPenjual(_x3) {\n        return _postLoginPenjual.apply(this, arguments);\n      }\n\n      return postLoginPenjual;\n    }(),\n    GetPublic: function () {\n      var _GetPublic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(state) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.get(baseUrl + '/public').then(function (response) {\n                  store.setState({\n                    listRetro: response.data.products\n                  });\n                  console.log(\"thiiis\", response.data);\n                  console.log(this.state.listRetro);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function GetPublic(_x4) {\n        return _GetPublic.apply(this, arguments);\n      }\n\n      return GetPublic;\n    }(),\n    getId: function () {\n      var _getId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(state, keyword) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.get(baseUrl + '/public/' + keyword).then(function (response) {\n                  console.log(\"RSP\", response.data);\n                  store.setState({\n                    itemDetail: response.data.product\n                  });\n                  console.log(\"COK\", response.data.product);\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function getId(_x5, _x6) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }(),\n    postPenjualBaru: function () {\n      var _postPenjualBaru = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password,\n                  shopName: state.shopName,\n                  email: state.email,\n                  contact: state.contact,\n                  address: state.address\n                };\n                _context6.next = 3;\n                return axios.post(baseUrl + '/penjual', data).then(function (response) {\n                  if (response.status == 200) {\n                    store.setState({\n                      username: state.username,\n                      shopName: state.shopName,\n                      email: state.email,\n                      contact: state.contact,\n                      address: state.address,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function postPenjualBaru(_x7) {\n        return _postPenjualBaru.apply(this, arguments);\n      }\n\n      return postPenjualBaru;\n    }(),\n    postPembeliBaru: function () {\n      var _postPembeliBaru = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password,\n                  fullName: state.fullName,\n                  email: state.email,\n                  contact: state.contact,\n                  address: state.address\n                };\n                _context7.next = 3;\n                return axios.post(baseUrl + '/pembeli', data).then(function (response) {\n                  if (response.status == 200) {\n                    console.log(\"Register\", response.data.input);\n                    store.setState({\n                      username: state.username,\n                      fullName: state.fullName,\n                      email: state.email,\n                      contact: state.contact,\n                      address: state.address,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function postPembeliBaru(_x8) {\n        return _postPembeliBaru.apply(this, arguments);\n      }\n\n      return postPembeliBaru;\n    }(),\n    postProduk: function () {\n      var _postProduk = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password,\n                  fullName: state.fullName,\n                  email: state.email,\n                  contact: state.contact,\n                  address: state.address\n                };\n                _context8.next = 3;\n                return axios.post(baseUrl + '/pembeli', data).then(function (response) {\n                  if (response.status == 200) {\n                    console.log(\"Register\", response.data.input);\n                    store.setState({\n                      username: state.username,\n                      fullName: state.fullName,\n                      email: state.email,\n                      contact: state.contact,\n                      address: state.address,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function postProduk(_x9) {\n        return _postProduk.apply(this, arguments);\n      }\n\n      return postProduk;\n    }() // searchNews: async (state, keyword) => {\n    //     if (keyword.length > 2) {\n    //         try {\n    //             {\n    //                 store.getState().listSong.map((item, key) => {\n    //                     var counter = 0;\n    //                     if (_.includes(item.track.name.toLowerCase(), keyword.toLowerCase())) {\n    //                         store.getState().dataSearch.push(item)\n    //                     }\n    //                 })\n    //             }\n    //             store.setState({ listSong: store.getState().dataSearch });\n    //         }\n    //         catch (error) {\n    //             console.log(error);\n    //         }\n    //     }\n    //     if (keyword.length <= 2) {\n    //         try {\n    //             const response = await axios.get(\n    //                 \"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                 {\n    //                     headers: {\n    //                         \"Authorization\": \"Bearer \" + Bearer,\n    //                     }\n    //                 })\n    //             // console.log(store.getState().listSong);\n    //             store.setState({ listSong: response.data.tracks.items });\n    //             store.getState().dataSearch = []\n    //         }\n    //         catch (error) {\n    //             console.log(error);\n    //         }\n    //     }\n    // },\n\n  };\n}; // GetCuaca: async (state) => {\n//     if (store.getState().MoodCityStat == 1) {\n//         await axios\n//             .get(\"http://api.openweathermap.org/data/2.5/weather?q=\" + store.getState().cities + \"&appid=02436e399d179c2eb2871ed7d4169798\")\n//             .then(function (response) {\n//                 store.setState({ Cuaca: response.data.weather['0'].id });\n//                 //dipakai juga untuk Focus, Chill, Accoustic, Classic\n//                 if (store.getState().Cuaca > 800) {\n//                     const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Berawan\" });\n//                 } else if (store.getState().Cuaca >= 700 && store.getState().Cuaca <= 800) {\n//                     const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Cerah\" });\n//                 } else {\n//                     const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Hujan\" });\n//                 }\n//                 axios\n//                     .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n//                         {\n//                             headers: {\n//                                 \"Authorization\": \"Bearer \" + Bearer,\n//                             }\n//                         })\n//                     .then(function (response) {\n//                         store.setState({ listSong: response.data.tracks.items });\n//                     })\n//                     .catch(function (error) {\n//                         console.log(error);\n//                     });\n//             })\n//             .catch(function (error) {\n//                 console.log(error);\n//             });\n//     }\n//     else if (store.getState().MoodCityStat == 2) {\n//         if (store.getState().moods == \"Galau\" || store.getState().moods == \"Nostalgia\") {\n//             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Sedih\") {\n//             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Senang\" || store.getState().moods == \"Semangat\" || store.getState().moods == \"Party\") {\n//             const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Fokus\" || store.getState().moods == \"Love\") {\n//             const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         await axios\n//             .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n//                 {\n//                     headers: {\n//                         \"Authorization\": \"Bearer \" + Bearer,\n//                     }\n//                 })\n//             .then(function (response) {\n//                 store.setState({ listSong: response.data.tracks.items });\n//             })\n//             .catch(function (error) {\n//                 console.log(error);\n//             });\n//     }\n// },","map":{"version":3,"sources":["/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/src/store.js"],"names":["createStore","axios","playlistBerawan","playlistCerah","playlistHujan","Bearer","_","initialState","is_login","token","username","password","userStatus","email","contact","address","avaPenjual","deskripsiPenjual","shopName","fullName","listRetro","fotoProduk","itemDetail","baseUrl","store","actions","setField","state","event","target","name","value","postLogout","postLoginPembeli","data","post","headers","then","response","status","setState","statusUser","console","log","getState","get","Authorization","buyer","catch","error","postLoginPenjual","hasOwnProperty","GetPublic","products","getId","keyword","product","postPenjualBaru","postPembeliBaru","input","postProduk"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,aAAzC,EAAwDC,MAAxD,QAAsE,WAAtE;AACA,OAAOC,CAAP,MAAc,QAAd;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,KADO;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,QAAQ,EAAE,EAJO;AAKjBC,EAAAA,UAAU,EAAE,EALK;AAMjBC,EAAAA,KAAK,EAAE,EANU;AAOjBC,EAAAA,OAAO,EAAE,EAPQ;AAQjBC,EAAAA,OAAO,EAAE,EARQ;AASjBC,EAAAA,UAAU,EAAE,EATK;AAUjBC,EAAAA,gBAAgB,EAAE,EAVD;AAYjBC,EAAAA,QAAQ,EAAE,EAZO;AAajBC,EAAAA,QAAQ,EAAE,EAbO;AAejBC,EAAAA,SAAS,EAAE,EAfM;AAgBjBC,EAAAA,UAAU,EAAE,EAhBK;AAkBjBC,EAAAA,UAAU,EAAE;AAlBK,CAArB;AAsBA,IAAMC,OAAO,GAAG,6BAAhB;AAEA,OAAO,IAAMC,KAAK,GAAGxB,WAAW,CAACO,YAAD,CAAzB;AAEP,OAAO,IAAMkB,OAAO,GAAG,SAAVA,OAAU,CAAAD,KAAK;AAAA,SAAK;AAC7BE,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,KAAR,EAAkB;AACxB,iCAAUA,KAAK,CAACC,MAAN,CAAaC,IAAvB,EAA8BF,KAAK,CAACC,MAAN,CAAaE,KAA3C;AACH,KAH4B;AAK7BC,IAAAA,UAAU,EAAE,oBAAAL,KAAK,EAAI;AACjB,aAAO;AACHnB,QAAAA,QAAQ,EAAE,KADP;AAEHC,QAAAA,KAAK,EAAE;AAFJ,OAAP;AAIH,KAV4B;AAY7BwB,IAAAA,gBAAgB;AAAA;AAAA;AAAA,+BAAE,kBAAON,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRO,gBAAAA,IADQ,GACD;AACTxB,kBAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADP;AAETC,kBAAAA,QAAQ,EAAEgB,KAAK,CAAChB;AAFP,iBADC;AAAA;AAAA,uBAKRV,KAAK,CACNkC,IADC,CACIZ,OAAO,GAAG,gBADd,EACgCW,IADhC,EACsC;AACpCE,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX;AAD2B,iBADtC,EAMDC,IANC;AAAA;AAAA;AAAA;AAAA;AAAA,2CAMK,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACH,gCAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxB;AACAf,8BAAAA,KAAK,CAACgB,QAAN,CAAe;AACXhC,gCAAAA,QAAQ,EAAE,IADC;AAEXC,gCAAAA,KAAK,EAAE6B,QAAQ,CAACJ,IAAT,CAAczB,KAFV;AAGXG,gCAAAA,UAAU,EAAE0B,QAAQ,CAACJ,IAAT,CAAcO;AAHf,+BAAf;AAKAC,8BAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BnB,KAAK,CAACoB,QAAN,GAAiBnC,KAA/C;AACH;;AATE;AAAA,mCAUGR,KAVH;;AAAA;AAWHyC,4BAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBnB,KAAK,CAACoB,QAAN,GAAiBnC,KAA1C,EACCoC,GADD,CACKtB,OAAO,GAAG,UADf,EAC2B;AACvBa,8BAAAA,OAAO,EAAE;AAACU,gCAAAA,aAAa,EAAE,YAAYtB,KAAK,CAACoB,QAAN,GAAiBnC;AAA7C;AADc,6BAD3B,EAGC4B,IAHD,CAGM,UAAUC,QAAV,EAAoB;AACtB,kCAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxBG,gCAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,QAAQ,CAACJ,IAArC;AACAV,gCAAAA,KAAK,CAACgB,QAAN,CAAe;AACXrB,kCAAAA,QAAQ,EAAEmB,QAAQ,CAACJ,IAAT,CAAca,KAAd,CAAoB5B,QADnB;AAEXL,kCAAAA,OAAO,EAAEwB,QAAQ,CAACJ,IAAT,CAAca,KAAd,CAAoBjC,OAFlB;AAGXD,kCAAAA,KAAK,EAAEyB,QAAQ,CAACJ,IAAT,CAAca,KAAd,CAAoBlC,KAHhB;AAIXE,kCAAAA,OAAO,EAAEuB,QAAQ,CAACJ,IAAT,CAAca,KAAd,CAAoBhC;AAJlB,iCAAf;AAMA2B,gCAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BhB,KAAK,CAACR,QAAlC;AACAuB,gCAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBhB,KAAK,CAACjB,QAA9B;AACH;AACJ,6BAfD,EAgBCsC,KAhBD,CAgBO,UAAUC,KAAV,EAAiB;AACpBP,8BAAAA,OAAO,CAACC,GAAR,CAAaM,KAAb;AACH,6BAlBD;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANL;;AAAA;AAAA;AAAA;AAAA,qBAqCDD,KArCC,CAqCK,UAAUC,KAAV,EAAiB;AACpBP,kBAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,iBAvCC,CALQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAZa;AA2D7BC,IAAAA,gBAAgB;AAAA;AAAA;AAAA,+BAAE,kBAAMvB,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACZO,gBAAAA,IADY,GACL;AACTxB,kBAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADP;AAETC,kBAAAA,QAAQ,EAAEgB,KAAK,CAAChB;AAFP,iBADK;AAAA;AAAA,uBAKZV,KAAK,CACNkC,IADC,CACIZ,OAAO,GAAG,gBADd,EACgCW,IADhC,EAEDG,IAFC,CAEI,UAAUC,QAAV,EAAoB;AACtB,sBAAIA,QAAQ,CAACJ,IAAT,CAAciB,cAAd,CAA6B,OAA7B,CAAJ,EAA2C;AACvC3B,oBAAAA,KAAK,CAACgB,QAAN,CAAe;AACXhC,sBAAAA,QAAQ,EAAE,IADC;AAEXC,sBAAAA,KAAK,EAAE6B,QAAQ,CAACJ,IAAT,CAAczB,KAFV;AAGXG,sBAAAA,UAAU,EAAE0B,QAAQ,CAACJ,IAAT,CAAcO;AAHf,qBAAf;AAKH;AACJ,iBAVC,EAWDO,KAXC,CAWK,UAAUC,KAAV,EAAiB;AACpBP,kBAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,iBAbC,CALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA3Da;AAgFjCG,IAAAA,SAAS;AAAA;AAAA;AAAA,+BAAE,kBAAOzB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACD1B,KAAK,CACN4C,GADC,CACGtB,OAAO,GAAG,SADb,EAEDc,IAFC,CAEI,UAAUC,QAAV,EAAoB;AACtBd,kBAAAA,KAAK,CAACgB,QAAN,CAAe;AAAEpB,oBAAAA,SAAS,EAAEkB,QAAQ,CAACJ,IAAT,CAAcmB;AAA3B,mBAAf;AACAX,kBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,QAAQ,CAACJ,IAA/B;AACAQ,kBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWP,SAAvB;AACH,iBANC,EAOD4B,KAPC,CAOK,UAAUC,KAAV,EAAiB;AACpBP,kBAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,iBATC,CADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAhFwB;AA6F7BK,IAAAA,KAAK;AAAA;AAAA;AAAA,+BAAE,kBAAO3B,KAAP,EAAc4B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACGtD,KAAK,CACN4C,GADC,CACGtB,OAAO,GAAG,UAAV,GAAuBgC,OAD1B,EAEDlB,IAFC,CAEI,UAAUC,QAAV,EAAoB;AACtBI,kBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,QAAQ,CAACJ,IAA5B;AACAV,kBAAAA,KAAK,CAACgB,QAAN,CAAe;AAAElB,oBAAAA,UAAU,EAAEgB,QAAQ,CAACJ,IAAT,CAAcsB;AAA5B,mBAAf;AACAd,kBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,QAAQ,CAACJ,IAAT,CAAcsB,OAAjC;AACH,iBANC,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA7FwB;AAuGzBC,IAAAA,eAAe;AAAA;AAAA;AAAA,+BAAE,kBAAM9B,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPO,gBAAAA,IADO,GACA;AACTxB,kBAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADP;AAETC,kBAAAA,QAAQ,EAAEgB,KAAK,CAAChB,QAFP;AAGTO,kBAAAA,QAAQ,EAAES,KAAK,CAACT,QAHP;AAITL,kBAAAA,KAAK,EAAEc,KAAK,CAACd,KAJJ;AAKTC,kBAAAA,OAAO,EAAEa,KAAK,CAACb,OALN;AAMTC,kBAAAA,OAAO,EAAEY,KAAK,CAACZ;AANN,iBADA;AAAA;AAAA,uBASPd,KAAK,CACNkC,IADC,CACIZ,OAAO,GAAG,UADd,EAC0BW,IAD1B,EAEDG,IAFC,CAEI,UAAUC,QAAV,EAAoB;AACtB,sBAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxBf,oBAAAA,KAAK,CAACgB,QAAN,CAAe;AACX9B,sBAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADL;AAEXQ,sBAAAA,QAAQ,EAAES,KAAK,CAACT,QAFL;AAGXL,sBAAAA,KAAK,EAAEc,KAAK,CAACd,KAHF;AAIXC,sBAAAA,OAAO,EAAEa,KAAK,CAACb,OAJJ;AAKXC,sBAAAA,OAAO,EAAEY,KAAK,CAACZ,OALJ;AAMXH,sBAAAA,UAAU,EAAE0B,QAAQ,CAACJ,IAAT,CAAcO;AANf,qBAAf;AAQH;AACJ,iBAbC,EAcDO,KAdC,CAcK,UAAUC,KAAV,EAAiB;AACpBP,kBAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,iBAhBC,CATO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAvGU;AAmIrBS,IAAAA,eAAe;AAAA;AAAA;AAAA,+BAAE,kBAAM/B,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACPO,gBAAAA,IADO,GACA;AACTxB,kBAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADP;AAETC,kBAAAA,QAAQ,EAAEgB,KAAK,CAAChB,QAFP;AAGTQ,kBAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAHP;AAITN,kBAAAA,KAAK,EAAEc,KAAK,CAACd,KAJJ;AAKTC,kBAAAA,OAAO,EAAEa,KAAK,CAACb,OALN;AAMTC,kBAAAA,OAAO,EAAEY,KAAK,CAACZ;AANN,iBADA;AAAA;AAAA,uBASPd,KAAK,CACNkC,IADC,CACIZ,OAAO,GAAG,UADd,EAC0BW,IAD1B,EAEDG,IAFC,CAEI,UAAUC,QAAV,EAAoB;AACtB,sBAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxBG,oBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAQ,CAACJ,IAAT,CAAcyB,KAAtC;AACAnC,oBAAAA,KAAK,CAACgB,QAAN,CAAe;AACX9B,sBAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADL;AAEXS,sBAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAFL;AAGXN,sBAAAA,KAAK,EAAEc,KAAK,CAACd,KAHF;AAIXC,sBAAAA,OAAO,EAAEa,KAAK,CAACb,OAJJ;AAKXC,sBAAAA,OAAO,EAAEY,KAAK,CAACZ,OALJ;AAMXH,sBAAAA,UAAU,EAAE0B,QAAQ,CAACJ,IAAT,CAAcO;AANf,qBAAf;AAQH;AACJ,iBAdC,EAeDO,KAfC,CAeK,UAAUC,KAAV,EAAiB;AACpBP,kBAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,iBAjBC,CATO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAnIM;AAgKjBW,IAAAA,UAAU;AAAA;AAAA;AAAA,+BAAE,kBAAMjC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACFO,gBAAAA,IADE,GACK;AACTxB,kBAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADP;AAETC,kBAAAA,QAAQ,EAAEgB,KAAK,CAAChB,QAFP;AAGTQ,kBAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAHP;AAITN,kBAAAA,KAAK,EAAEc,KAAK,CAACd,KAJJ;AAKTC,kBAAAA,OAAO,EAAEa,KAAK,CAACb,OALN;AAMTC,kBAAAA,OAAO,EAAEY,KAAK,CAACZ;AANN,iBADL;AAAA;AAAA,uBASFd,KAAK,CACNkC,IADC,CACIZ,OAAO,GAAG,UADd,EAC0BW,IAD1B,EAEDG,IAFC,CAEI,UAAUC,QAAV,EAAoB;AACtB,sBAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxBG,oBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAQ,CAACJ,IAAT,CAAcyB,KAAtC;AACAnC,oBAAAA,KAAK,CAACgB,QAAN,CAAe;AACX9B,sBAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADL;AAEXS,sBAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAFL;AAGXN,sBAAAA,KAAK,EAAEc,KAAK,CAACd,KAHF;AAIXC,sBAAAA,OAAO,EAAEa,KAAK,CAACb,OAJJ;AAKXC,sBAAAA,OAAO,EAAEY,KAAK,CAACZ,OALJ;AAMXH,sBAAAA,UAAU,EAAE0B,QAAQ,CAACJ,IAAT,CAAcO;AANf,qBAAf;AAQH;AACJ,iBAdC,EAeDO,KAfC,CAeK,UAAUC,KAAV,EAAiB;AACpBP,kBAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,iBAjBC,CATE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAhKO,CA4L7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA/N6B,GAAL;AAAA,CAArB,C,CAiOH;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\nimport { playlistBerawan, playlistCerah, playlistHujan, Bearer } from \"./Data.js\"\nimport _ from 'lodash';\n\n\nconst initialState = {\n    is_login: false,\n    token: \"\",\n    username: \"\",\n    password: \"\",\n    userStatus: \"\",\n    email: \"\",\n    contact: \"\",\n    address: \"\",\n    avaPenjual: \"\",\n    deskripsiPenjual: \"\",\n\n    shopName: \"\",\n    fullName: \"\",\n\n    listRetro: [],\n    fotoProduk: \"\",\n\n    itemDetail: \"\",\n\n}\n\nconst baseUrl = 'http://localhost:8010/proxy'\n\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n    setField: (state, event) => {\n        return { [event.target.name]: event.target.value };\n    },\n\n    postLogout: state => {\n        return {\n            is_login: false,\n            token: \"\"\n        };\n    },\n\n    postLoginPembeli: async (state) => {\n        const data = {\n            username: state.username,\n            password: state.password,\n        };\n        await axios\n            .post(baseUrl + '/login/pembeli', data, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            })\n            .then( async (response) => {\n                if (response.status == 200) {\n                    // console.log('INITOKEN', response.data.token)\n                    store.setState({\n                        is_login: true,\n                        token: response.data.token,\n                        userStatus: response.data.statusUser\n                    });\n                    console.log('INI JUGA TOKEN', store.getState().token)    \n                }\n                await axios\n                console.log('ini loooh', store.getState().token)\n                .get(baseUrl + '/pembeli', {\n                    headers: {Authorization: \"Bearer \" + store.getState().token }})\n                .then(function (response) {\n                    if (response.status == 200) {\n                        console.log('ISI RESPONSE', response.data)\n                        store.setState({\n                            fullName: response.data.buyer.fullName,\n                            contact: response.data.buyer.contact,\n                            email: response.data.buyer.email,\n                            address: response.data.buyer.address,\n                        })\n                        console.log('nama lengkap', state.fullName)\n                        console.log('username', state.username)\n                    }\n                })\n                .catch(function (error) {\n                    console.log (error);\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n\n    postLoginPenjual: async state => {\n    const data = {\n        username: state.username,\n        password: state.password,\n    };\n    await axios\n        .post(baseUrl + '/login/penjual', data)\n        .then(function (response) {\n            if (response.data.hasOwnProperty('token')) {\n                store.setState({\n                    is_login: true,\n                    token: response.data.token,\n                    userStatus: response.data.statusUser\n                })\n            }\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n},\n\nGetPublic: async (state) => {\n    await axios\n        .get(baseUrl + '/public')\n        .then(function (response) {\n            store.setState({ listRetro: response.data.products })\n            console.log(\"thiiis\", response.data);\n            console.log(this.state.listRetro);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n},\n\n    getId: async (state, keyword) => {\n        await axios\n            .get(baseUrl + '/public/' + keyword)\n            .then(function (response) {\n                console.log(\"RSP\", response.data)\n                store.setState({ itemDetail: response.data.product })\n                console.log(\"COK\", response.data.product)\n            })\n    },\n\n        postPenjualBaru: async state => {\n            const data = {\n                username: state.username,\n                password: state.password,\n                shopName: state.shopName,\n                email: state.email,\n                contact: state.contact,\n                address: state.address,\n            };\n            await axios\n                .post(baseUrl + '/penjual', data)\n                .then(function (response) {\n                    if (response.status == 200) {\n                        store.setState({\n                            username: state.username,\n                            shopName: state.shopName,\n                            email: state.email,\n                            contact: state.contact,\n                            address: state.address,\n                            userStatus: response.data.statusUser,\n                        })\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        },\n\n            postPembeliBaru: async state => {\n                const data = {\n                    username: state.username,\n                    password: state.password,\n                    fullName: state.fullName,\n                    email: state.email,\n                    contact: state.contact,\n                    address: state.address,\n                };\n                await axios\n                    .post(baseUrl + '/pembeli', data)\n                    .then(function (response) {\n                        if (response.status == 200) {\n                            console.log(\"Register\", response.data.input)\n                            store.setState({\n                                username: state.username,\n                                fullName: state.fullName,\n                                email: state.email,\n                                contact: state.contact,\n                                address: state.address,\n                                userStatus: response.data.statusUser,\n                            })\n                        }\n                    })\n                    .catch(function (error) {\n                        console.log(error);\n                    });\n            },\n\n                postProduk: async state => {\n                    const data = {\n                        username: state.username,\n                        password: state.password,\n                        fullName: state.fullName,\n                        email: state.email,\n                        contact: state.contact,\n                        address: state.address,\n                    };\n                    await axios\n                        .post(baseUrl + '/pembeli', data)\n                        .then(function (response) {\n                            if (response.status == 200) {\n                                console.log(\"Register\", response.data.input)\n                                store.setState({\n                                    username: state.username,\n                                    fullName: state.fullName,\n                                    email: state.email,\n                                    contact: state.contact,\n                                    address: state.address,\n                                    userStatus: response.data.statusUser,\n                                })\n                            }\n                        })\n                        .catch(function (error) {\n                            console.log(error);\n                        });\n                },\n    // searchNews: async (state, keyword) => {\n    //     if (keyword.length > 2) {\n    //         try {\n    //             {\n    //                 store.getState().listSong.map((item, key) => {\n    //                     var counter = 0;\n    //                     if (_.includes(item.track.name.toLowerCase(), keyword.toLowerCase())) {\n    //                         store.getState().dataSearch.push(item)\n    //                     }\n    //                 })\n    //             }\n\n    //             store.setState({ listSong: store.getState().dataSearch });\n    //         }\n    //         catch (error) {\n    //             console.log(error);\n    //         }\n    //     }\n    //     if (keyword.length <= 2) {\n    //         try {\n    //             const response = await axios.get(\n    //                 \"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                 {\n    //                     headers: {\n    //                         \"Authorization\": \"Bearer \" + Bearer,\n    //                     }\n    //                 })\n    //             // console.log(store.getState().listSong);\n    //             store.setState({ listSong: response.data.tracks.items });\n    //             store.getState().dataSearch = []\n    //         }\n    //         catch (error) {\n    //             console.log(error);\n    //         }\n    //     }\n    // },\n})\n    // GetCuaca: async (state) => {\n    //     if (store.getState().MoodCityStat == 1) {\n    //         await axios\n    //             .get(\"http://api.openweathermap.org/data/2.5/weather?q=\" + store.getState().cities + \"&appid=02436e399d179c2eb2871ed7d4169798\")\n    //             .then(function (response) {\n    //                 store.setState({ Cuaca: response.data.weather['0'].id });\n\n    //                 //dipakai juga untuk Focus, Chill, Accoustic, Classic\n    //                 if (store.getState().Cuaca > 800) {\n    //                     const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Berawan\" });\n\n    //                 } else if (store.getState().Cuaca >= 700 && store.getState().Cuaca <= 800) {\n    //                     const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Cerah\" });\n\n    //                 } else {\n    //                     const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Hujan\" });\n\n    //                 }\n    //                 axios\n    //                     .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                         {\n    //                             headers: {\n    //                                 \"Authorization\": \"Bearer \" + Bearer,\n    //                             }\n    //                         })\n    //                     .then(function (response) {\n    //                         store.setState({ listSong: response.data.tracks.items });\n\n    //                     })\n    //                     .catch(function (error) {\n    //                         console.log(error);\n    //                     });\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //             });\n    //     }\n    //     else if (store.getState().MoodCityStat == 2) {\n    //         if (store.getState().moods == \"Galau\" || store.getState().moods == \"Nostalgia\") {\n    //             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Sedih\") {\n    //             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Senang\" || store.getState().moods == \"Semangat\" || store.getState().moods == \"Party\") {\n    //             const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Fokus\" || store.getState().moods == \"Love\") {\n    //             const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n\n    //         await axios\n    //             .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                 {\n    //                     headers: {\n    //                         \"Authorization\": \"Bearer \" + Bearer,\n    //                     }\n    //                 })\n    //             .then(function (response) {\n    //                 store.setState({ listSong: response.data.tracks.items });\n\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //             });\n    //     }\n    // },\n"]},"metadata":{},"sourceType":"module"}