{"ast":null,"code":"import _regeneratorRuntime from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport createStore from \"unistore\";\nimport axios from \"axios\";\nimport { playlistBerawan, playlistCerah, playlistHujan, Bearer } from \"./Data.js\";\nimport _ from 'lodash';\nvar initialState = {\n  cities: \"\",\n  api_key: \"\",\n  email: \"\",\n  password: \"\",\n  full_name: \"\",\n  username: \"\",\n  avatar: \"\",\n  is_login: \"\",\n  token: \"\",\n  userStatus: \"\",\n  listRetro: []\n};\nvar baseUrl = 'http://localhost:8010/proxy/';\nexport var store = createStore(initialState);\nexport var actions = function actions(store) {\n  return {\n    setField: function setField(state, event) {\n      return _defineProperty({}, event.target.name, event.target.value);\n    },\n    postLogout: function postLogout(state) {\n      return {\n        is_login: false,\n        token: \"\"\n      };\n    },\n    ChangeValue: function ChangeValue(state, data, stats) {\n      if (stats == 1) {\n        return {\n          cities: data,\n          MoodCityStat: stats\n        };\n      }\n\n      if (stats == 2) {\n        return {\n          moods: data,\n          MoodCityStat: stats\n        };\n      }\n    },\n    postLoginPembeli: function () {\n      var _postLoginPembeli = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                _context.next = 3;\n                return axios.get(baseUrl + 'login/pembeli', data, {\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                }).then(function (response) {\n                  console.log('response cuk', response);\n\n                  if (response.status == 200) {\n                    store.setState({\n                      is_login: true,\n                      token: response.data.token,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function postLoginPembeli(_x) {\n        return _postLoginPembeli.apply(this, arguments);\n      }\n\n      return postLoginPembeli;\n    }(),\n    postLoginPenjual: function () {\n      var _postLoginPenjual = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(state) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  username: state.username,\n                  password: state.password\n                };\n                _context2.next = 3;\n                return axios.get(baseUrl + 'login/penjual', data).then(function (response) {\n                  if (response.data.hasOwnProperty('token')) {\n                    store.setState({\n                      is_login: true,\n                      token: response.data.token,\n                      userStatus: response.data.statusUser\n                    });\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function postLoginPenjual(_x2) {\n        return _postLoginPenjual.apply(this, arguments);\n      }\n\n      return postLoginPenjual;\n    }(),\n    GetPublic: function () {\n      var _GetPublic = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(state) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.get(baseUrl + 'public').then(function (response) {\n                  store.setState({\n                    listRetro: response.data.products\n                  });\n                  console.log(\"thiiis\", response.data);\n                  console.log(this.state.listRetro);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function GetPublic(_x3) {\n        return _GetPublic.apply(this, arguments);\n      }\n\n      return GetPublic;\n    }(),\n    searchNews: function () {\n      var _searchNews = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(state, keyword) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (keyword.length > 2) {\n                  try {\n                    {\n                      store.getState().listSong.map(function (item, key) {\n                        var counter = 0;\n\n                        if (_.includes(item.track.name.toLowerCase(), keyword.toLowerCase())) {\n                          store.getState().dataSearch.push(item);\n                        }\n                      });\n                    }\n                    store.setState({\n                      listSong: store.getState().dataSearch\n                    });\n                  } catch (error) {\n                    console.log(error);\n                  }\n                }\n\n                if (!(keyword.length <= 2)) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                _context4.prev = 2;\n                _context4.next = 5;\n                return axios.get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower, {\n                  headers: {\n                    \"Authorization\": \"Bearer \" + Bearer\n                  }\n                });\n\n              case 5:\n                response = _context4.sent;\n                // console.log(store.getState().listSong);\n                store.setState({\n                  listSong: response.data.tracks.items\n                });\n                store.getState().dataSearch = [];\n                _context4.next = 13;\n                break;\n\n              case 10:\n                _context4.prev = 10;\n                _context4.t0 = _context4[\"catch\"](2);\n                console.log(_context4.t0);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 10]]);\n      }));\n\n      function searchNews(_x4, _x5) {\n        return _searchNews.apply(this, arguments);\n      }\n\n      return searchNews;\n    }()\n  };\n}; // GetCuaca: async (state) => {\n//     if (store.getState().MoodCityStat == 1) {\n//         await axios\n//             .get(\"http://api.openweathermap.org/data/2.5/weather?q=\" + store.getState().cities + \"&appid=02436e399d179c2eb2871ed7d4169798\")\n//             .then(function (response) {\n//                 store.setState({ Cuaca: response.data.weather['0'].id });\n//                 //dipakai juga untuk Focus, Chill, Accoustic, Classic\n//                 if (store.getState().Cuaca > 800) {\n//                     const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Berawan\" });\n//                 } else if (store.getState().Cuaca >= 700 && store.getState().Cuaca <= 800) {\n//                     const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Cerah\" });\n//                 } else {\n//                     const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//                     store.setState({ Thrower: playlist });\n//                     store.setState({ NamaCuaca: \"Hujan\" });\n//                 }\n//                 axios\n//                     .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n//                         {\n//                             headers: {\n//                                 \"Authorization\": \"Bearer \" + Bearer,\n//                             }\n//                         })\n//                     .then(function (response) {\n//                         store.setState({ listSong: response.data.tracks.items });\n//                     })\n//                     .catch(function (error) {\n//                         console.log(error);\n//                     });\n//             })\n//             .catch(function (error) {\n//                 console.log(error);\n//             });\n//     }\n//     else if (store.getState().MoodCityStat == 2) {\n//         if (store.getState().moods == \"Galau\" || store.getState().moods == \"Nostalgia\") {\n//             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Sedih\") {\n//             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Senang\" || store.getState().moods == \"Semangat\" || store.getState().moods == \"Party\") {\n//             const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         else if (store.getState().moods == \"Fokus\" || store.getState().moods == \"Love\") {\n//             const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n//             store.setState({ Thrower: playlist });\n//         }\n//         await axios\n//             .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n//                 {\n//                     headers: {\n//                         \"Authorization\": \"Bearer \" + Bearer,\n//                     }\n//                 })\n//             .then(function (response) {\n//                 store.setState({ listSong: response.data.tracks.items });\n//             })\n//             .catch(function (error) {\n//                 console.log(error);\n//             });\n//     }\n// },","map":{"version":3,"sources":["/home/alphatech/Documents/02-Project_Portofolio/react-ecommerce/src/store.js"],"names":["createStore","axios","playlistBerawan","playlistCerah","playlistHujan","Bearer","_","initialState","cities","api_key","email","password","full_name","username","avatar","is_login","token","userStatus","listRetro","baseUrl","store","actions","setField","state","event","target","name","value","postLogout","ChangeValue","data","stats","MoodCityStat","moods","postLoginPembeli","get","headers","then","response","console","log","status","setState","statusUser","catch","error","postLoginPenjual","hasOwnProperty","GetPublic","products","searchNews","keyword","length","getState","listSong","map","item","key","counter","includes","track","toLowerCase","dataSearch","push","Thrower","tracks","items"],"mappings":"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","sourcesContent":["import createStore from \"unistore\";\nimport axios from \"axios\";\nimport { playlistBerawan, playlistCerah, playlistHujan, Bearer } from \"./Data.js\"\nimport _ from 'lodash';\n\n\nconst initialState = {\n    cities: \"\",\n    api_key: \"\",\n    email: \"\",\n    password: \"\",\n    full_name: \"\",\n    username: \"\",\n    avatar: \"\",\n    is_login: \"\",\n    token:\"\",\n    userStatus:\"\",\n\n    listRetro:[],\n\n}\n\nconst baseUrl = 'http://localhost:8010/proxy/'\n\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n    setField: (state, event) => {\n        return { [event.target.name]: event.target.value };\n    },\n    \n    postLogout: state => {\n        return {\n            is_login: false,\n            token: \"\"\n        };\n    },\n    ChangeValue: (state, data, stats) => {\n        if (stats == 1) {\n            return { cities: data, MoodCityStat: stats };\n        }\n        if (stats == 2) {\n            return { moods: data, MoodCityStat: stats };\n        }\n    },\n    postLoginPembeli: async (state) => {\n        const data = {\n            username: state.username,\n            password: state.password,\n        };\n        await axios\n            .get(baseUrl + 'login/pembeli', data, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            })\n            .then(function (response) {\n                console.log('response cuk', response)\n                if (response.status == 200) {\n                    store.setState({\n                        is_login: true,\n                        token: response.data.token,\n                        userStatus: response.data.statusUser\n                    })\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n\n    postLoginPenjual: async state => {\n        const data = {\n            username: state.username,\n            password: state.password,\n        };\n        await axios\n            .get(baseUrl + 'login/penjual', data)\n            .then(function (response) {\n                if (response.data.hasOwnProperty('token')) {\n                    store.setState({\n                        is_login: true,\n                        token: response.data.token,\n                        userStatus: response.data.statusUser\n                    })\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },\n\n    GetPublic: async (state) => {\n        await axios\n            .get( baseUrl + 'public')\n            .then(function (response) {\n                store.setState({listRetro: response.data.products})\n                console.log(\"thiiis\",response.data);\n                console.log(this.state.listRetro);\n           })\n            .catch(function(error){\n                console.log(error);\n            });\n    },\n    searchNews: async (state, keyword) => {\n        if (keyword.length > 2) {\n            try {\n                {\n                    store.getState().listSong.map((item, key) => {\n                        var counter = 0;\n                        if (_.includes(item.track.name.toLowerCase(), keyword.toLowerCase())) {\n                            store.getState().dataSearch.push(item)\n                        }\n                    })\n                }\n\n                store.setState({ listSong: store.getState().dataSearch });\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n        if (keyword.length <= 2) {\n            try {\n                const response = await axios.get(\n                    \"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n                    {\n                        headers: {\n                            \"Authorization\": \"Bearer \" + Bearer,\n                        }\n                    })\n                // console.log(store.getState().listSong);\n                store.setState({ listSong: response.data.tracks.items });\n                store.getState().dataSearch = []\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n    },\n})\n    // GetCuaca: async (state) => {\n    //     if (store.getState().MoodCityStat == 1) {\n    //         await axios\n    //             .get(\"http://api.openweathermap.org/data/2.5/weather?q=\" + store.getState().cities + \"&appid=02436e399d179c2eb2871ed7d4169798\")\n    //             .then(function (response) {\n    //                 store.setState({ Cuaca: response.data.weather['0'].id });\n\n    //                 //dipakai juga untuk Focus, Chill, Accoustic, Classic\n    //                 if (store.getState().Cuaca > 800) {\n    //                     const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Berawan\" });\n\n    //                 } else if (store.getState().Cuaca >= 700 && store.getState().Cuaca <= 800) {\n    //                     const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Cerah\" });\n\n    //                 } else {\n    //                     const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //                     store.setState({ Thrower: playlist });\n    //                     store.setState({ NamaCuaca: \"Hujan\" });\n\n    //                 }\n    //                 axios\n    //                     .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                         {\n    //                             headers: {\n    //                                 \"Authorization\": \"Bearer \" + Bearer,\n    //                             }\n    //                         })\n    //                     .then(function (response) {\n    //                         store.setState({ listSong: response.data.tracks.items });\n\n    //                     })\n    //                     .catch(function (error) {\n    //                         console.log(error);\n    //                     });\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //             });\n    //     }\n    //     else if (store.getState().MoodCityStat == 2) {\n    //         if (store.getState().moods == \"Galau\" || store.getState().moods == \"Nostalgia\") {\n    //             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Sedih\") {\n    //             const playlist = playlistHujan[Math.floor(Math.random() * playlistHujan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Senang\" || store.getState().moods == \"Semangat\" || store.getState().moods == \"Party\") {\n    //             const playlist = playlistCerah[Math.floor(Math.random() * playlistCerah.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n    //         else if (store.getState().moods == \"Fokus\" || store.getState().moods == \"Love\") {\n    //             const playlist = playlistBerawan[Math.floor(Math.random() * playlistBerawan.length)];\n    //             store.setState({ Thrower: playlist });\n    //         }\n\n    //         await axios\n    //             .get(\"https://api.spotify.com/v1/playlists/\" + store.getState().Thrower,\n    //                 {\n    //                     headers: {\n    //                         \"Authorization\": \"Bearer \" + Bearer,\n    //                     }\n    //                 })\n    //             .then(function (response) {\n    //                 store.setState({ listSong: response.data.tracks.items });\n\n    //             })\n    //             .catch(function (error) {\n    //                 console.log(error);\n    //             });\n    //     }\n    // },\n    "]},"metadata":{},"sourceType":"module"}